name: "Update Github issues"

on:
  workflow_dispatch:
  schedule:
    # every day
    - cron: "0 * * * *"

# will cancel previous workflows if they are still running.
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  daily-update:
    name: Run ETL
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ hashFiles('**/poetry.lock') }}
      - name: Install python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --directory github_issues
      - name: Extract issues
        run: poetry run --directory github_issues python ./github_issues/extract.py
        env:
          GITHUB_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
          GITHUB_REPO_NAME: ${{ secrets.GH_REPO_NAME }}
          GITHUB_REPO_OWNER: ${{ secrets.GH_REPO_OWNER }}
      - name: Upload issues
        run: poetry run --directory dbt-core_issues hb upload dbt_issues.parquet
        env:
          HASHBOARD_PROJECT_ID: ${{ secrets.GH_HASHBOARD_PROJECT_ID }}
          HASHBOARD_ACCESS_KEY_ID: ${{ secrets.GH_HASHBOARD_ACCESS_KEY_ID }}
          HASHBOARD_SECRET_ACCESS_KEY_TOKEN: ${{ secrets.GH_HASHBOARD_SECRET_ACCESS_KEY_TOKEN }}
      - name: Rebuild project
        run: poetry run --directory dbt-core_issues hb deploy ./github_issues
        env:
          HASHBOARD_PROJECT_ID: ${{ secrets.GH_HASHBOARD_PROJECT_ID }}
          HASHBOARD_ACCESS_KEY_ID: ${{ secrets.GH_HASHBOARD_ACCESS_KEY_ID }}
          HASHBOARD_SECRET_ACCESS_KEY_TOKEN: ${{ secrets.GH_HASHBOARD_SECRET_ACCESS_KEY_TOKEN }}
